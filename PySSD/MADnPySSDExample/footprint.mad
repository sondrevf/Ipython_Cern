
Option, -echo,-info,-warn;

option, warn,info;
System,"mkdir temp";
system,"ln -fns /afs/cern.ch/eng/lhc/optics/runIII lhc";
system,"ln -fns /afs/cern.ch/eng/lhc/optics/HLLHCV1.3  slhc";
option, -echo, -warn,info;
call,file="lhc/lhc.seq";
call,file="slhc/toolkit/macro.madx";

mylhcbeam = 1;

call,file="slhc/hllhc_sequence.madx";

exec,myslice;

call,file="slhc/squeeze2/opt_300_300_300_300_thin.madx";

!exec,check_ip(b1); exec,check_ip(b2);

!exec,check_ip(b1); exec,check_ip(b2);

call, file = "octupole.str";


!+++++++++++++++++++++++++ Step 1 +++++++++++++++++++++++
! 	define beam constants
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++

call, file = "beamDefinition";

!+++++++++++++++++++++++++ Step 2 +++++++++++++++++++++++
! 	slice, flatten sequence, and cycle start to ip3
!	load collision configuration
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++


use,sequence=lhcb1;

!option,warn,echo,info;
call,file="octupole.str";
 abas :=  2.0*clight/(7e12)*on_atlas ;
 abcs :=  4.0*clight/(7e12)*on_cms ;
 
!match;
!global, q1=64.29,q2=59.325;
!vary,   name=kqtf.b1, step=1.E-6;
!vary,   name=kqtd.b1, step=1.E-6;
!lmdif,  calls=200, tolerance=1.E-10;
!endmatch;

call, file="machineConfig";

call, file="slhc/toolkit/rematch_chroma.madx";
call, file="slhc/toolkit/rematch_tune.madx";

!use,period=lhcb1;
!select,flag=twiss,clear;
!select,flag=twiss,column=name,s,x,y,betx,bety;
!twiss,file="testb1.twiss";
!stop;

!QX0 = 64.31;
!QY0 = 59.32;
!call, file = "coupling.mad";

seqedit,sequence=lhcb1;
flatten;
endedit;

seqedit,sequence=lhcb1;
cycle,start=ip3;
endedit;

seqedit,sequence=lhcb2;
flatten;
endedit;

seqedit,sequence=lhcb2;
cycle,start=ip3;
endedit;

call,file = "collisionPath";


!+++++++++++++++++++++++++ Step 3 +++++++++++++++++++++++
! 	define the beam-beam elements
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++

call,file="macro_bb.madx";                  ! macros for beam-beam


n_insideD1 = 5;    !default value for the number of additionnal parasitic encounters inside D1

nho_IR1= 21;        ! number of slices for head-on in IR1 (between 0 and 201)
nho_IR2= 21;        ! number of slices for head-on in IR2 (between 0 and 201)
nho_IR5= 21;        ! number of slices for head-on in IR5 (between 0 and 201)
nho_IR8= 21;        ! number of slices for head-on in IR8 (between 0 and 201)

Option, echo,info,warn;
exec DEFINE_BB_PARAM;  !Define main beam-beam parameters

!Record the nominal IP position and crossing angle
if(mylhcbeam==1) {use,  sequence=lhcb1;};
if(mylhcbeam>1) {use,  sequence=lhcb2;};
twiss;

xnom1=table(twiss,IP1,x);pxnom1=table(twiss,IP1,px);ynom1=table(twiss,IP1,y);pynom1=table(twiss,IP1,py);
xnom2=table(twiss,IP2,x);pxnom2=table(twiss,IP2,px);ynom2=table(twiss,IP2,y);pynom2=table(twiss,IP2,py);
xnom5=table(twiss,IP5,x);pxnom5=table(twiss,IP5,px);ynom5=table(twiss,IP5,y);pynom5=table(twiss,IP5,py);
xnom8=table(twiss,IP8,x);pxnom8=table(twiss,IP8,px);ynom8=table(twiss,IP8,y);pynom8=table(twiss,IP8,py);
value,xnom1,xnom2,xnom5,xnom8;
value,ynom1,ynom2,ynom5,ynom8;
value,pxnom1,pxnom2,pxnom5,pxnom8;
value,pynom1,pynom2,pynom5,pynom8;

!Install b-b marker
exec INSTALL_BB_MARK(b1);exec INSTALL_BB_MARK(b2);

!Define bb lenses for both beams in all IR's and calculate # of encounters before D1
exec CALCULATE_BB_LENS;

!Install bb lenses
npara_1 = npara0_1 + n_insideD1;
npara_5 = npara0_5 + n_insideD1;
npara_2 = npara0_2 + n_insideD1;
npara_8 = npara0_8 + n_insideD1;
if(mylhcbeam==1) {exec INSTALL_BB_LENS(b1);};
if(mylhcbeam>1) {exec INSTALL_BB_LENS(b2);};

!Print the lenses in bb_lenses.dat
exec, PRINT_BB_LENSES;

ON_BB_CHARGE := 0; !Switch off the charge the bb lenses

!Install Crab Cavities for the weak beam
call,file="slhc/toolkit/enable_crabcavities.madx";

/*
!Plot b-b separation
exec PLOT_BB_SEP(1,$npara_1);
exec PLOT_BB_SEP(2,$npara_2);
exec PLOT_BB_SEP(5,$npara_5);
exec PLOT_BB_SEP(8,$npara_8);
*/

use,sequence=lhcb1;
select,flag=twiss,clear;
select,flag=twiss,class=marker,pattern=PAR.*L1,range=mbxf.4l1..4/IP1.L1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*L5,range=mbxf.4l5..4/IP5,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*R1,range=IP1/mbxf.4r1..1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*R5,range=IP5/mbxf.4r5..1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=IP1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=IP5,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
twiss,file=twiss_bb.b1;system,"cat twiss_bb.b1";


use,sequence=lhcb2;
select,flag=twiss,clear;
select,flag=twiss,class=marker,pattern=PAR.*L1,range=mbxf.4l1..4/IP1.L1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*L5,range=mbxf.4l5..4/IP5,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*R1,range=IP1/mbxf.4r1..1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=PAR.*R5,range=IP5/mbxf.4r5..1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=IP1,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
select,flag=twiss,class=marker,pattern=IP5,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
twiss,file=twiss_bb.b2;system,"cat twiss_bb.b2";

if(mylhcbeam==1) {use,sequence=lhcb1;};
if(mylhcbeam>1) {use,sequence=lhcb2;};

select,flag=twiss,clear;
select,flag=twiss,pattern=HO,class=beambeam,column=s,name,betx,bety,alfx,alfy,mux,muy,x,y,px,py;
twiss,file=twiss_bb;system,"cat twiss_bb";

!Remove bb markers
exec REMOVE_BB_MARKER;

ON_BB_CHARGE := 1;

!--- Now the beam-beam element installation is complete

!seqedit,sequence=lhcb1;
!cycle,start=ip1;
!endedit;

use,period=lhcb2;
select,flag=twiss,clear;
select,flag=twiss,column=name,s,x,py,y,py,betx,bety;
twiss,file='b2.twiss';
!plot,haxis=s,vaxis=x,y,colour=100,noline;

use,period=lhcb1;
select,flag=twiss,clear;
select,flag=twiss,column=name,s,x,px,y,py,betx,bety;
twiss,file='b1.twiss';
!plot,haxis=s,vaxis=x,y,colour=100,noline;

!QX0 = table(summ,q1);
!QY0 = table(summ,q2);
!value,QX0,QY0;
!call,file="coupling.mad";

!seqedit,sequence=lhcb2;
!cycle,start=ip1;
!endedit;

!
!  make footprint
!

!option,trace;
small=0.05;
jMax = 5.0;
nJ = 20;
dJ = jMax/nJ;
track;
countX = 0;
while (countX < nJ)
{
  countY = 0;
  while(countY < nJ)
  {
     sigX = sqrt(2*dJ*countX);
     sigY = sqrt(2*dJ*countY);
     if(sigX<small){
       sigX = small;
     }
     if(sigY<small){
       sigY = small;
     }
     start,fx=sigX,fy=sigY;
     countY = countY + 1;
  }
  countX = countX + 1;
}
dynap,fastune,turns=1024;
endtrack;
!write,table=dynap,file;
write,table=dynaptune,file;
!system,"./foot < dynaptune > footprint";
system, "rm lyapunov.data";
system, "unlink slhc";
system, "unlink lhc";
stop;

